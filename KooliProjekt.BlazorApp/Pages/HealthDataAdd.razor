@page "/healthdata/add"
@inject NavigationManager Navigation
@inject IApiClient ApiClient

<PageTitle>Lisa uus</PageTitle>

<h3>Terviseandmete lisamine</h3>

<EditForm EditContext="@editContext" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Kaal:</label>
        <InputNumber @bind-Value="healthData.Weight" class="form-control" />
        <ValidationMessage For="@(() => healthData.Weight)" />
    </div>

    <div class="form-group">
        <label>Verrerõhk:</label>
        <InputNumber @bind-Value="healthData.Blood_pressure" class="form-control" />
        <ValidationMessage For="@(() => healthData.Blood_pressure)" />
    </div>

    <div class="form-group">
        <label>Veresuhkur:</label>
        <InputNumber @bind-Value="healthData.Blood_sugar" class="form-control" />
        <ValidationMessage For="@(() => healthData.Blood_sugar)" />
    </div>

    <button type="submit" class="btn btn-primary mt-3">Salvesta</button>
</EditForm>

@code {
    private HealthData healthData = new();
    private EditContext editContext;
    private ValidationMessageStore messageStore;

    protected override void OnInitialized()
    {
        editContext = new EditContext(healthData);
        messageStore = new ValidationMessageStore(editContext);
    }

    private async Task HandleValidSubmit()
    {
        messageStore.Clear(); // Clear previous errors
        var result = await ApiClient.Save(healthData);

        if (result.HasError)
        {
            foreach (var error in result.Errors)
            {
                foreach (var msg in error.Value)
                {
                    messageStore.Add(editContext.Field(error.Key), msg);
                }
            }
            editContext.NotifyValidationStateChanged();
        }
        else
        {
            Navigation.NavigateTo("/");
        }
    }
}
